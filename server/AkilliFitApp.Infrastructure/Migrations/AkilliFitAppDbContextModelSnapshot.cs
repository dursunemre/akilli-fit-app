// <auto-generated />
using System;
using AkilliFitApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkilliFitApp.Infrastructure.Migrations
{
    [DbContext(typeof(AkilliFitAppDbContext))]
    partial class AkilliFitAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("EgzersizBilgiSequence");

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.AgirlikEgzersiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgirlikEgzersizleri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.Besin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kalori100gr")
                        .HasColumnType("int");

                    b.Property<double>("Karbonhidrat100gr")
                        .HasColumnType("float");

                    b.Property<double>("Protein100gr")
                        .HasColumnType("float");

                    b.Property<double>("Yag100gr")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Besinler");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.DiyetBesin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BesinId")
                        .HasColumnType("int");

                    b.Property<int>("DiyetProgramsId")
                        .HasColumnType("int");

                    b.Property<double>("Gramaj")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BesinId");

                    b.HasIndex("DiyetProgramsId");

                    b.ToTable("DiyetBesinleri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.DiyetProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiyetProgramlari");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.EgzersizBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [EgzersizBilgiSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<int>("EgzersizProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EgzersizProgramId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.EgzersizProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciUid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciUid");

                    b.ToTable("EgzersizProgramlari");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.KardiyoEgzersiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KardiyoEgzersizleri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.Kullanici", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AktiviteSeviyesi")
                        .HasColumnType("int");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DogumTarihi")
                        .HasColumnType("date");

                    b.Property<double>("HedefKilo")
                        .HasColumnType("float");

                    b.Property<double>("Kilo")
                        .HasColumnType("float");

                    b.Property<string>("ProfilResmiUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.AgirlikEgzersizBilgi", b =>
                {
                    b.HasBaseType("AkilliFitApp.Domain.Entities.EgzersizBilgi");

                    b.Property<int>("AgirlikEgzersizId")
                        .HasColumnType("int");

                    b.Property<double>("AgirlikKG")
                        .HasColumnType("float");

                    b.Property<double>("HedeflenenAgirlikKG")
                        .HasColumnType("float");

                    b.Property<int>("Set")
                        .HasColumnType("int");

                    b.Property<int>("Tekrar")
                        .HasColumnType("int");

                    b.HasIndex("AgirlikEgzersizId");

                    b.HasIndex("EgzersizProgramId", "AgirlikEgzersizId")
                        .IsUnique()
                        .HasFilter("[AgirlikEgzersizId] IS NOT NULL");

                    b.ToTable("AgirlikEgzersizBilgileri", (string)null);
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.KardiyoEgzersizBilgi", b =>
                {
                    b.HasBaseType("AkilliFitApp.Domain.Entities.EgzersizBilgi");

                    b.Property<double>("HedeflenenMesafe")
                        .HasColumnType("float");

                    b.Property<TimeOnly>("HedeflenenSure")
                        .HasColumnType("time");

                    b.Property<int>("KardiyoEgzersizId")
                        .HasColumnType("int");

                    b.Property<double>("MesafeMtr")
                        .HasColumnType("float");

                    b.Property<TimeOnly>("Sure")
                        .HasColumnType("time");

                    b.HasIndex("KardiyoEgzersizId");

                    b.HasIndex("EgzersizProgramId", "KardiyoEgzersizId")
                        .IsUnique()
                        .HasFilter("[KardiyoEgzersizId] IS NOT NULL");

                    b.ToTable("KardiyoEgzersizBilgileri", (string)null);
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.DiyetBesin", b =>
                {
                    b.HasOne("AkilliFitApp.Domain.Entities.Besin", "Besin")
                        .WithMany("DiyetBesinler")
                        .HasForeignKey("BesinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkilliFitApp.Domain.Entities.DiyetProgram", "DiyetPrograms")
                        .WithMany("DiyetBesinleri")
                        .HasForeignKey("DiyetProgramsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Besin");

                    b.Navigation("DiyetPrograms");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.EgzersizBilgi", b =>
                {
                    b.HasOne("AkilliFitApp.Domain.Entities.EgzersizProgram", "EgzersizProgram")
                        .WithMany("KardiyoEgzersizBilgi")
                        .HasForeignKey("EgzersizProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EgzersizProgram");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.EgzersizProgram", b =>
                {
                    b.HasOne("AkilliFitApp.Domain.Entities.Kullanici", "Kullanici")
                        .WithMany("Programlar")
                        .HasForeignKey("KullaniciUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.AgirlikEgzersizBilgi", b =>
                {
                    b.HasOne("AkilliFitApp.Domain.Entities.AgirlikEgzersiz", "AgirlikEgzersiz")
                        .WithMany("AgirlikEgzersizBilgileri")
                        .HasForeignKey("AgirlikEgzersizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgirlikEgzersiz");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.KardiyoEgzersizBilgi", b =>
                {
                    b.HasOne("AkilliFitApp.Domain.Entities.KardiyoEgzersiz", "KardiyoEgzersiz")
                        .WithMany("KardiyoEgzersizBilgileri")
                        .HasForeignKey("KardiyoEgzersizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KardiyoEgzersiz");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.AgirlikEgzersiz", b =>
                {
                    b.Navigation("AgirlikEgzersizBilgileri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.Besin", b =>
                {
                    b.Navigation("DiyetBesinler");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.DiyetProgram", b =>
                {
                    b.Navigation("DiyetBesinleri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.EgzersizProgram", b =>
                {
                    b.Navigation("KardiyoEgzersizBilgi");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.KardiyoEgzersiz", b =>
                {
                    b.Navigation("KardiyoEgzersizBilgileri");
                });

            modelBuilder.Entity("AkilliFitApp.Domain.Entities.Kullanici", b =>
                {
                    b.Navigation("Programlar");
                });
#pragma warning restore 612, 618
        }
    }
}
